// <auto-generated />
using Cars.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cars.DataContext.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20250303215140_InitialCreates")]
    partial class InitialCreates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cars.Model.AttributionVehiculeModel", b =>
                {
                    b.Property<int>("VehiculeID")
                        .HasColumnType("int");

                    b.Property<int>("SalarieID")
                        .HasColumnType("int");

                    b.HasKey("VehiculeID", "SalarieID");

                    b.HasIndex("SalarieID");

                    b.ToTable("AttributionVehicule");
                });

            modelBuilder.Entity("Cars.Model.EntreprisesModel", b =>
                {
                    b.Property<int>("Entrepriseid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Entrepriseid"));

                    b.Property<bool>("ContratActif")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Entrepriseid");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("Cars.Model.SalariesModel", b =>
                {
                    b.Property<int>("Salarieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Salarieid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Entrepriseid")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Salarieid");

                    b.HasIndex("Entrepriseid");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Cars.Model.VehiculesModel", b =>
                {
                    b.Property<int>("Vehiculeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vehiculeid"));

                    b.Property<int>("EntrepriseID")
                        .HasColumnType("int");

                    b.Property<string>("Immatriculation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vehiculeid");

                    b.HasIndex("EntrepriseID");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("Cars.Model.AttributionVehiculeModel", b =>
                {
                    b.HasOne("Cars.Model.SalariesModel", "Salarie")
                        .WithMany("AttributionVehicules")
                        .HasForeignKey("SalarieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Cars.Model.VehiculesModel", "Vehicule")
                        .WithMany("AttributionVehicules")
                        .HasForeignKey("VehiculeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Salarie");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("Cars.Model.SalariesModel", b =>
                {
                    b.HasOne("Cars.Model.EntreprisesModel", "Entreprise")
                        .WithMany("Salaries")
                        .HasForeignKey("Entrepriseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("Cars.Model.VehiculesModel", b =>
                {
                    b.HasOne("Cars.Model.EntreprisesModel", "Entreprise")
                        .WithMany("Vehicules")
                        .HasForeignKey("EntrepriseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("Cars.Model.EntreprisesModel", b =>
                {
                    b.Navigation("Salaries");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("Cars.Model.SalariesModel", b =>
                {
                    b.Navigation("AttributionVehicules");
                });

            modelBuilder.Entity("Cars.Model.VehiculesModel", b =>
                {
                    b.Navigation("AttributionVehicules");
                });
#pragma warning restore 612, 618
        }
    }
}
